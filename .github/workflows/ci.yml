name: CI

on:
  push:
    branches:
      - '**'

env:
  CI: true
  BUILD_CACHE_KEY: build-${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      -
        name: Cache build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ./build
          key: ${{ env.BUILD_CACHE_KEY }}
      -
        name: Checkout repository
        if: steps.cache-build.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
      -
        name: Read .nvmrc
        id: nvm
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      -
        name: Setup Node.js
        if: steps.cache-build.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      -
        name: Install dependencies
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: npm ci
      -
        name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v2
      -
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      -
        name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      -
        name: Install dependencies
        run: npm ci
      -
        name: Run test
        run: npm run test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build, test]
    if: ${{ github.ref == 'refs/heads/main' }}
    timeout-minutes: 10
    steps:
      -
        name: Restore cached build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ./build
          key: ${{ env.BUILD_CACHE_KEY }}
      - 
        name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          publish_dir: ./build
