{"version":3,"sources":["media/logo.svg","components/submission-list/submission-list.tsx","components/logo/logo.tsx","components/header/header.tsx","components/submission-card/submission-card.tsx","components/submission-card-skeleton/submission-card-skeleton.tsx","components/api-context/api-context.tsx","reportWebVitals.ts","components/settings-dialog/settings-dialog.tsx","components/settings-container/settings-container.tsx","api/api.ts","components/app/app.tsx","theme.ts","index.tsx"],"names":["_defs","_circle","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","id","className","cx","cy","r","d","State","ForwardRef","Logo","SvgIcon","sx","marginRight","Header","AppBar","position","Toolbar","Typography","variant","flexGrow","IconButton","onClick","open","SubmissionCard","submission","hasImages","preview","images","firstImage","Card","width","xs","md","CardActionArea","CardHeader","subheader","subreddit_name_prefixed","ups","downs","CardMedia","component","image","url","CardContent","selftext","SubmissionCardSkeleton","Skeleton","animation","height","ApiContext","createContext","undefined","Loading","Array","from","map","_","index","Failed","Alert","severity","AlertTitle","Success","submissions","onPerfEntry","SubmissionList","useState","setSubmissions","state","setState","apiContext","useContext","useEffect","api","getHot","then","catch","Stack","spacing","marginY","direction","justifyContent","alignItems","SettingsDialog","apiOptions","userAgent","setUserAgent","clientId","setClientId","clientSecret","setClientSecret","refreshToken","setRefreshToken","Dialog","onClose","close","DialogTitle","DialogContent","TextField","margin","label","type","fullWidth","value","onChange","event","DialogActions","Button","setApiOptions","SettingsContainer","isOpen","setOpen","children","Api","options","_options","_r","Snoowrap","createApi","apiReducer","isNewOptions","window","localStorage","setItem","storeApiOptionsInStorage","App","getItem","getApiOptionsFromStorage","useReducer","setApi","Provider","theme","createTheme","palette","mode","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.1736e256.chunk.js","sourcesContent":["var _defs, _circle, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 100 100\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \"\\n      .cls-1 {\\n        fill: #ff4500;\\n      }\\n      .cls-2 {\\n        fill: #fff;\\n      }\\n    \"))), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"cls-1\",\n    cx: 50,\n    cy: 50,\n    r: 49\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-2\",\n    d: \"M52.69,18.79a1.62,1.62,0,0,1,1.93-1.22L67.86,20.5a5.24,5.24,0,1,1-.55,2.93l-12-2.66-4.07,17.5A37.77,37.77,0,0,1,73,45.47a7.71,7.71,0,0,1,11.83.93,7.53,7.53,0,0,1,.41.73,8,8,0,0,1-3.6,10.7,18.67,18.67,0,0,1-8,17.5A39.59,39.59,0,0,1,50,82.46a39.57,39.57,0,0,1-23.64-7.13,18.67,18.67,0,0,1-8-17.5,7.53,7.53,0,0,1-.73-.41,8,8,0,0,1-2.46-11,8.27,8.27,0,0,1,.9-1.06A7.74,7.74,0,0,1,27,45.47a37.78,37.78,0,0,1,21.19-7.19Zm4.39,37.4a5.3,5.3,0,1,0,5.3-5.3,5.29,5.29,0,0,0-5.3,5.3ZM63.39,70.8a1.22,1.22,0,0,0-1.3-2,20.66,20.66,0,0,1-24.18,0,1.22,1.22,0,0,0-1.3,2A22.66,22.66,0,0,0,63.39,70.8ZM32.32,56.19a5.3,5.3,0,1,0,5.3-5.3,5.29,5.29,0,0,0-5.3,5.3Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.3f2ef86c.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect, useContext } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport { Listing, Submission } from 'snoowrap';\nimport SubmissionCard from 'components/submission-card';\nimport SubmissionCardSkeleton from 'components/submission-card-skeleton';\nimport ApiContext from 'components/api-context';\n\nconst Loading = () => (\n  <>\n    {Array.from(Array(10)).map((_, index) => (\n      <SubmissionCardSkeleton key={index} />\n    ))}\n  </>\n);\n\nconst Failed = () => (\n  <Alert severity=\"error\" variant=\"filled\">\n    <AlertTitle>Error</AlertTitle>\n    Cannot establish connection with the API. Please provide valid configuration in <b>Settings</b>.\n  </Alert>\n);\n\nconst Success = (props: { submissions: Listing<Submission> }) => (\n  <>\n    {props.submissions.map((submission) => (\n      <SubmissionCard key={submission.id} submission={submission} />\n    ))}\n  </>\n);\n\nenum State {\n  Loading,\n  Success,\n  Failed,\n}\n\nexport const SubmissionList = () => {\n  const [submissions, setSubmissions] = useState<Listing<Submission>>([] as unknown as Listing<Submission>);\n  const [state, setState] = useState<State>(State.Loading);\n  const apiContext = useContext(ApiContext);\n\n  useEffect(() => {\n    setState(State.Loading);\n    apiContext?.api\n      .getHot()\n      .then((submissions) => {\n        setSubmissions(submissions);\n        setState(State.Success);\n      })\n      .catch(() => {\n        setState(State.Failed);\n      });\n  }, [apiContext?.api]);\n\n  return (\n    <Stack spacing={3} sx={{ marginY: '20px' }} direction=\"column\" justifyContent=\"flex-start\" alignItems=\"center\">\n      {state === State.Loading ? <Loading /> : null}\n      {state === State.Failed ? <Failed /> : null}\n      {state === State.Success ? <Success submissions={submissions} /> : null}\n    </Stack>\n  );\n};\n","import SvgIcon from '@mui/material/SvgIcon';\nimport { ReactComponent as SvgLogo } from 'media/logo.svg';\n\nexport const Logo = () => {\n  return (\n    <SvgIcon sx={{ marginRight: '10px' }}>\n      <SvgLogo />\n    </SvgIcon>\n  );\n};\n","import AppBar from '@mui/material/AppBar';\nimport IconButton from '@mui/material/IconButton';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport Logo from 'components/logo';\n\nexport type HeaderProps = {\n  open: () => void;\n};\n\nexport const Header = (props: HeaderProps) => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Logo />\n        <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\n          reddid\n        </Typography>\n        <IconButton aria-label=\"Settings\" onClick={props.open}>\n          <SettingsIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { Submission } from 'snoowrap';\n\nexport const SubmissionCard = (props: { submission: Submission }) => {\n  const { submission } = props;\n  const hasImages = submission.preview?.images?.length > 0;\n  const firstImage = submission.preview?.images[0];\n  return (\n    <Card sx={{ width: { xs: '100%', md: '800px' } }}>\n      <CardActionArea>\n        <CardHeader\n          title={submission.title}\n          subheader={`${submission.subreddit_name_prefixed} - ${submission.ups} ups ${submission.downs} downs`}\n        />\n        {hasImages ? (\n          <CardMedia component=\"img\" image={firstImage.source.url} />\n        ) : (\n          <CardContent>\n            <Typography>{submission.selftext}</Typography>\n          </CardContent>\n        )}\n      </CardActionArea>\n    </Card>\n  );\n};\n","import Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Skeleton from '@mui/material/Skeleton';\n\nexport const SubmissionCardSkeleton = () => {\n  return (\n    <Card sx={{ width: { xs: '100%', md: '800px' } }}>\n      <CardHeader\n        title={<Skeleton animation=\"wave\" height={32} width=\"85%\" />}\n        subheader={<Skeleton animation=\"wave\" height={24} width=\"30%\" />}\n      />\n      <Skeleton sx={{ height: { xs: 220, md: 450 } }} animation=\"wave\" variant=\"rectangular\" />\n    </Card>\n  );\n};\n","import { createContext, Dispatch } from 'react';\nimport { Api, ApiOptions } from 'api';\n\nexport type ApiContextPayload = {\n  api: Api;\n  apiOptions: ApiOptions;\n  setApiOptions: Dispatch<ApiOptions>\n}\n\nexport const ApiContext = createContext<ApiContextPayload | undefined>(undefined);\n","import { ReportHandler } from 'web-vitals';\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","import { ChangeEventHandler, useContext, useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport ApiContext from 'components/api-context';\n\nexport type SettingsDialogProps = {\n  open: boolean;\n  close: () => void;\n};\n\nexport const SettingsDialog = (props: SettingsDialogProps) => {\n  const apiContext = useContext(ApiContext);\n  const [userAgent, setUserAgent] = useState(apiContext?.apiOptions.userAgent);\n  const onChangeUserAgent: ChangeEventHandler<HTMLInputElement> = (event) => setUserAgent(event.target.value);\n  const [clientId, setClientId] = useState(apiContext?.apiOptions.clientId);\n  const onChangeClientId: ChangeEventHandler<HTMLInputElement> = (event) => setClientId(event.target.value);\n  const [clientSecret, setClientSecret] = useState(apiContext?.apiOptions.clientSecret);\n  const onChangeClientSecret: ChangeEventHandler<HTMLInputElement> = (event) => setClientSecret(event.target.value);\n  const [refreshToken, setRefreshToken] = useState(apiContext?.apiOptions.refreshToken);\n  const onChangeRefreshToken: ChangeEventHandler<HTMLInputElement> = (event) => setRefreshToken(event.target.value);\n  const onSubmit = () => {\n    if (userAgent && clientId && clientSecret && refreshToken) {\n      apiContext?.setApiOptions({\n        userAgent,\n        clientId,\n        clientSecret,\n        refreshToken,\n      });\n    }\n    props.close();\n  };\n  return (\n    <Dialog open={props.open} onClose={props.close}>\n      <DialogTitle>Settings</DialogTitle>\n      <DialogContent>\n        <TextField\n          margin=\"dense\"\n          id=\"user-agent\"\n          label=\"User Agent\"\n          type=\"email\"\n          fullWidth\n          variant=\"standard\"\n          value={userAgent}\n          onChange={onChangeUserAgent}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"client-id\"\n          label=\"Client ID\"\n          type=\"email\"\n          fullWidth\n          variant=\"standard\"\n          value={clientId}\n          onChange={onChangeClientId}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"client-secret\"\n          label=\"Client Secret\"\n          type=\"email\"\n          fullWidth\n          variant=\"standard\"\n          value={clientSecret}\n          onChange={onChangeClientSecret}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"refresh-token\"\n          label=\"Refresh Token\"\n          type=\"email\"\n          fullWidth\n          variant=\"standard\"\n          value={refreshToken}\n          onChange={onChangeRefreshToken}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.close}>Cancel</Button>\n        <Button onClick={onSubmit}>Save</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { ReactNode, useState } from 'react';\nimport SettingsDialog from 'components/settings-dialog';\n\nexport type SettingsContainerProps = {\n  children: (open: () => void) => ReactNode;\n};\n\nexport const SettingsContainer = (props: SettingsContainerProps) => {\n  const [isOpen, setOpen] = useState(false);\n  const open = () => setOpen(true);\n  const close = () => setOpen(false);\n  return (\n    <>\n      <SettingsDialog open={isOpen} close={close} />\n      {props.children(open)}\n    </>\n  );\n};\n","import Snoowrap, { Listing, Submission } from 'snoowrap';\n\nexport type ApiOptions = { userAgent: string; clientId: string; clientSecret: string; refreshToken: string };\n\nexport class Api {\n  private _options: ApiOptions;\n  private _r: Snoowrap;\n\n  constructor(options: ApiOptions) {\n    this._options = options;\n    this._r = new Snoowrap({\n      userAgent: options.userAgent,\n      clientId: options.clientId,\n      clientSecret: options.clientSecret,\n      refreshToken: options.refreshToken,\n    });\n  }\n\n  getHot(): Promise<Listing<Submission>> {\n    return this._r.getHot();\n  }\n\n  isNewOptions(options: ApiOptions): boolean {\n    return (\n      options.userAgent !== this._options.userAgent ||\n      options.clientId !== this._options.clientId ||\n      options.clientSecret !== this._options.clientSecret ||\n      options.refreshToken !== this._options.refreshToken\n    );\n  }\n}\n\nexport const createApi = (options: ApiOptions): Api => new Api(options);\n\nexport const getApiOptionsFromStorage = (): ApiOptions => {\n  return {\n    userAgent: window.localStorage.getItem('userAgent') ?? '',\n    clientId: window.localStorage.getItem('clientId') ?? '',\n    clientSecret: window.localStorage.getItem('clientSecret') ?? '',\n    refreshToken: window.localStorage.getItem('refreshToken') ?? '',\n  };\n};\n\nexport const storeApiOptionsInStorage = (options: ApiOptions): void => {\n  window.localStorage.setItem('userAgent', options.userAgent);\n  window.localStorage.setItem('clientId', options.clientId);\n  window.localStorage.setItem('clientSecret', options.clientSecret);\n  window.localStorage.setItem('refreshToken', options.refreshToken);\n};\n","import { useEffect, useReducer, useState } from 'react';\nimport Header from 'components/header';\nimport SubmissionList from 'components/submission-list';\nimport SettingsContainer from 'components/settings-container';\nimport ApiContext from 'components/api-context';\nimport { Api, ApiOptions, createApi, getApiOptionsFromStorage, storeApiOptionsInStorage } from 'api';\n\nconst apiReducer = (api: Api, options: ApiOptions): Api => {\n  if (api.isNewOptions(options)) {\n    storeApiOptionsInStorage(options);\n    return createApi(options);\n  }\n  return api;\n};\n\nexport const App = () => {\n  const [apiOptions, setApiOptions] = useState(getApiOptionsFromStorage());\n  const [api, setApi] = useReducer(apiReducer, createApi(apiOptions));\n\n  useEffect(() => {\n    setApi(apiOptions);\n  }, [apiOptions])\n\n  return (\n    <ApiContext.Provider value={{ api, apiOptions, setApiOptions }}>\n      <SettingsContainer>\n        {(open: () => void) => (\n          <Header open={open} />\n        )}\n      </SettingsContainer>\n      <SubmissionList />\n    </ApiContext.Provider>\n  );\n};\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from 'components/app';\nimport { reportWebVitals } from './reportWebVitals';\nimport { theme } from './theme';\n\nReactDOM.render(\n  <StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}